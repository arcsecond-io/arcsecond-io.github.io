import{_ as e,c as a,o as t,a3 as r}from"./chunks/framework.CN2TXM7E.js";const f=JSON.parse('{"title":"APIs & Ecosystem","description":"","frontmatter":{},"headers":[],"relativePath":"globals/ecosystem/index.md","filePath":"globals/ecosystem/index.md"}'),s={name:"globals/ecosystem/index.md"},o=r('<h1 id="apis-ecosystem" tabindex="-1">APIs &amp; Ecosystem <a class="header-anchor" href="#apis-ecosystem" aria-label="Permalink to &quot;APIs &amp; Ecosystem&quot;">​</a></h1><p>Arcsecond.io is a software <em>system</em>. Behind the webapp available on any navigator, there are various other associated services and projects.</p><ul><li><a href="./apis">APIs</a> - our backend RESTful APIs.</li><li><a href="./aa-js">aa-js</a> - our open-source library of astronomical algorithms in Typescript.</li><li><a href="./cli">CLI</a> - our open-source Command-Line Interface (a.k.a. the <code>arcsecond</code> terminal command).</li></ul><h2 id="support-services-repositories" tabindex="-1">Support services &amp; repositories <a class="header-anchor" href="#support-services-repositories" aria-label="Permalink to &quot;Support services &amp; repositories&quot;">​</a></h2><p>In addition to that, we&#39;ve put in place an external <a href="https://status.arcsecond.io" target="_blank" rel="noreferrer">Status Page</a> which monitor the availability of the various parts of our system, and send us alerts when something becomes unreachable.</p><p>On GitHub we also published a <a href="https://github.com/arcsecond-io/standard-stars-catalogues" target="_blank" rel="noreferrer">repository</a> where 17 catalogues of standard stars were formatted and unified. These are catalogues found in the various pages of the websites of <a href="https://www.eso.org/sci/observing/tools/standards.html" target="_blank" rel="noreferrer">ESO</a>, <a href="https://www2.keck.hawaii.edu/inst/common/landolt_stds.html" target="_blank" rel="noreferrer">Keck</a>, <a href="http://www.ukirt.hawaii.edu/astronomy/" target="_blank" rel="noreferrer">UKIRT</a>, <a href="https://www.gemini.edu/sciops/instruments/gmos/calibration/photometric-stds" target="_blank" rel="noreferrer">Gemini</a>, <a href="http://catserver.ing.iac.es/landscape/index.php" target="_blank" rel="noreferrer">IAC</a> and the <a href="http://www.not.iac.es/observing/forms/landscape/v1.4/www/" target="_blank" rel="noreferrer">NOT</a>.</p><p>There&#39;s also a public issues repository (but it isn&#39;t much used, people prefer to reach us directly).</p><h2 id="reachability" tabindex="-1">Reachability <a class="header-anchor" href="#reachability" aria-label="Permalink to &quot;Reachability&quot;">​</a></h2><p>And finally, we are reachable for any question, suggestions or bug reports in multiple ways:</p><ul><li>Our email is <a href="mailto:team@arcsecond.io" target="_blank" rel="noreferrer">team@arcsecond.io</a></li><li>We have a <a href="https://join.slack.com/t/arcsecond-io/shared_invite/zt-yvsehzjl-jExYLVWzwuslMJum7r2GiA" target="_blank" rel="noreferrer">Slack</a> (open and free)</li><li>And a Twitter account <a href="https://twitter.com/arcsecond_io" target="_blank" rel="noreferrer">@arcsecond_io</a></li></ul><h2 id="technology-stack" tabindex="-1">Technology Stack <a class="header-anchor" href="#technology-stack" aria-label="Permalink to &quot;Technology Stack&quot;">​</a></h2><p>For the tech-savvy users, here is the main elements of ou technology stack:</p><ul><li>The backend is written with Django 4 and the Django Rest Framework, with pytest as a test library.</li><li>The frontend webapp is developed with Vue.js 3, and written in typescript, with vitest as a test library, and vite.js for the bundler.</li><li>The data is stored on Amazon Web Service (AWS) S3, using secured buckets. We have two AWS Lambda functions for zipping datasets before downloads.</li><li>Our servers (web server, background workers, static frontend etc) are deployed with Render.com</li><li>The documentation pages are hosted by the &quot;Pages&quot; services of GitHub.</li><li>We heavily use the professional edition of PyCharm on macOS and test our interface using Safari, Firefox and the Brave browser.</li><li>The desktop app is built with Electron.js.</li></ul>',13),i=[o];function n(l,c,h,d,p,u){return t(),a("div",null,i)}const b=e(s,[["render",n]]);export{f as __pageData,b as default};
